- name: Generate CA certificate
  shell: "cfssl gencert --initca csr.json | cfssljson -bare ca"
  args:
    chdir: "{{ certs_dir }}"
    creates: "{{ certs_dir }}/ca*.pem"

- name: Generate etcd certificate
  shell: "cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=config.json -profile=kubernetes etcd-csr.json | cfssljson -bare etcd"
  args:
    chdir: "{{ certs_dir }}"
    creates: "{{ certs_dir }}/etcd*.pem"

- name: Generate kubernetes apiserver certificate
  shell: "cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=config.json -profile=kubernetes kube-apiserver-csr.json | cfssljson -bare kube-apiserver"
  args:
    chdir: "{{ certs_dir }}"
    creates: "{{ certs_dir }}/kube-apiserver*.pem"

- name: Generate kubernetes controller manager certificate
  shell: "cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=config.json -profile=kubernetes kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager"
  args:
    chdir: "{{ certs_dir }}"
    creates: "{{ certs_dir }}/kube-controller-manager*.pem"

- name: Generate kubernetes scheduler certificate
  shell: "cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=config.json -profile=kubernetes kube-scheduler-csr.json | cfssljson -bare kube-scheduler"
  args:
    chdir: "{{ certs_dir }}"
    creates: "{{ certs_dir }}/kube-scheduler*.pem"

- name: Generate kube cluster admin certificate
  shell: "cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=config.json -profile=kubernetes kube-admin-csr.json | cfssljson -bare kube-admin"
  args:
    chdir: "{{ certs_dir }}"
    creates: "{{ certs_dir }}/kube-admin*.pem"

- name: Generate kubernetes proxy certificate
  shell: "cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=config.json -profile=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy"
  args:
    chdir: "{{ certs_dir }}"
    creates: "{{ certs_dir }}/kube-proxy*.pem"
  when: kube_proxy_enabled
