[Unit]
Description=Kubernetes Kubelet
After=docker.service
Requires=docker.service

[Service]
ExecStart={{ kube_bin_dir }}/kubelet \
  --cgroup-driver={{ kube_cgroup_driver }} \
  --fail-swap-on=false \
  --address={{ ip | default(ansible_default_ipv4.address) }} \
  --hostname-override={{ ansible_hostname }} \
  --pod-infra-container-image={{ pod_infra_container_image }} \
  --experimental-bootstrap-kubeconfig={{ kube_certs_dir }}/bootstrap.kubeconfig \
  --kubeconfig={{ kube_certs_dir }}/kubelet.kubeconfig \
  --cert-dir={{ kube_certs_dir }} \
  --cluster_dns={{ kube_cluster_dns }} \
  --cluster_domain={{ kube_cluster_domain }} \
  --hairpin-mode promiscuous-bridge \
  --allow-privileged=true \
{% if ansible_hostname in groups['k8s-node'] %}
  --node-labels=node-role.kubernetes.io/k8s-node=true \
{% elif ansible_hostname in groups['k8s-master'] %}
  --node-labels=node-role.kubernetes.io/k8s-master=true \
{% endif %}
  --serialize-image-pulls=true \
  --max-pods=512 \
  --v={{ kube_log_level }} \
  --network-plugin={{ kube_network_plugin }} \
  --cni-conf-dir={{ kube_cni_conf_dir }} \
  --cni-bin-dir= {{ kube_cni_bin_dir }}
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
